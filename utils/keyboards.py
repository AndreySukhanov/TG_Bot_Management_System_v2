"""
–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∏ –º–µ–Ω—é –±–æ—Ç–∞.
–°–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
"""

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder


def get_main_menu_keyboard(user_role: str) -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–æ–ª–∏
    
    Args:
        user_role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (marketer, financier, manager)
        
    Returns:
        ReplyKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥
    """
    builder = ReplyKeyboardBuilder()
    
    # –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π
    builder.add(KeyboardButton(text="üìã –°–ø—Ä–∞–≤–∫–∞"))
    builder.add(KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    
    if user_role == "marketer":
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–≤
        builder.add(KeyboardButton(text="üí≥ –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É"))
        builder.add(KeyboardButton(text="üìù –ü—Ä–∏–º–µ—Ä—ã –∑–∞—è–≤–æ–∫"))
        
    elif user_role == "financier":
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–∏—Å—Ç–æ–≤
        builder.add(KeyboardButton(text="üí∞ –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å"))
        builder.add(KeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É"))
        builder.add(KeyboardButton(text="üìä –ú–æ–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏"))
        
    elif user_role == "manager":
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π
        builder.add(KeyboardButton(text="üí∞ –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å"))
        builder.add(KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
        builder.add(KeyboardButton(text="üíµ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"))
        builder.add(KeyboardButton(text="üìà –û—Ç—á–µ—Ç—ã"))
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    builder.adjust(2)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    
    return builder.as_markup(
        resize_keyboard=True,
        one_time_keyboard=False,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
    )


def get_examples_keyboard(user_role: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–æ–ª–∏
    
    Args:
        user_role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        InlineKeyboardMarkup —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
    """
    builder = InlineKeyboardBuilder()
    
    if user_role == "marketer":
        builder.add(InlineKeyboardButton(
            text="üí≥ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", 
            callback_data="example_crypto"
        ))
        builder.add(InlineKeyboardButton(
            text="üì± –¢–µ–ª–µ—Ñ–æ–Ω", 
            callback_data="example_phone"
        ))
        builder.add(InlineKeyboardButton(
            text="üí∞ –°—á–µ—Ç", 
            callback_data="example_account"
        ))
        builder.add(InlineKeyboardButton(
            text="üìÑ –§–∞–π–ª", 
            callback_data="example_file"
        ))
        builder.add(InlineKeyboardButton(
            text="ü§ñ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫", 
            callback_data="example_natural"
        ))
        
    elif user_role == "financier":
        builder.add(InlineKeyboardButton(
            text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã", 
            callback_data="example_confirmation"
        ))
        builder.add(InlineKeyboardButton(
            text="üìã –ö–æ–º–∞–Ω–¥—ã –±–∞–ª–∞–Ω—Å–∞", 
            callback_data="example_balance_commands"
        ))
        
    elif user_role == "manager":
        builder.add(InlineKeyboardButton(
            text="üíµ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ", 
            callback_data="example_balance_classic"
        ))
        builder.add(InlineKeyboardButton(
            text="ü§ñ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º", 
            callback_data="example_balance_natural"
        ))
        builder.add(InlineKeyboardButton(
            text="üìä –ö–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", 
            callback_data="example_stats_commands"
        ))
    
    builder.adjust(2)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    
    return builder.as_markup()


def get_quick_actions_keyboard(user_role: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    
    Args:
        user_role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        InlineKeyboardMarkup —Å –±—ã—Å—Ç—Ä—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    """
    builder = InlineKeyboardBuilder()
    
    if user_role == "marketer":
        builder.add(InlineKeyboardButton(
            text="üöÄ –ë—ã—Å—Ç—Ä–∞—è –∑–∞—è–≤–∫–∞ Facebook", 
            callback_data="quick_facebook"
        ))
        builder.add(InlineKeyboardButton(
            text="üöÄ –ë—ã—Å—Ç—Ä–∞—è –∑–∞—è–≤–∫–∞ Google", 
            callback_data="quick_google"
        ))
        builder.add(InlineKeyboardButton(
            text="üöÄ –ë—ã—Å—Ç—Ä–∞—è –∑–∞—è–≤–∫–∞ Instagram", 
            callback_data="quick_instagram"
        ))
        
    elif user_role == "financier":
        builder.add(InlineKeyboardButton(
            text="üí∞ –ë—ã—Å—Ç—Ä—ã–π –±–∞–ª–∞–Ω—Å", 
            callback_data="quick_balance"
        ))
        builder.add(InlineKeyboardButton(
            text="üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏", 
            callback_data="quick_operations"
        ))
        
    elif user_role == "manager":
        builder.add(InlineKeyboardButton(
            text="üìä –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", 
            callback_data="quick_stats"
        ))
        builder.add(InlineKeyboardButton(
            text="üíµ –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", 
            callback_data="quick_add_balance"
        ))
        builder.add(InlineKeyboardButton(
            text="üìà –°–≤–æ–¥–∫–∞ –¥–Ω—è", 
            callback_data="quick_daily_summary"
        ))
    
    builder.adjust(2)
    
    return builder.as_markup()


def remove_keyboard() -> ReplyKeyboardMarkup:
    """–£–¥–∞–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    return ReplyKeyboardMarkup(
        keyboard=[],
        resize_keyboard=True,
        one_time_keyboard=True
    )